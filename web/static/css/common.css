/* ========== * ========== * ========== * ==========
 * Reset
 * ========== * ========== * ========== * ==========
 */
/*
 *	All elements:
 */
*{
	position: relative;
   box-sizing: border-box;
   padding: 0;
   margin: 0;
   border: none;
   background: none;
   font-family: 'RobotoRegular';
}


/*
 *	Specific elements:
 */
span:hover, .material-icons:hover{
   cursor: default;
}
a{
   text-decoration: none;
}
ul{
	list-style: none;
}
button:hover, button *:hover{
	cursor: pointer;
}
button:focus, input:focus, select:focus{
   outline: none;
}
footer{
	bottom: 0;
	left: 0;
	width: 100%;
	height: auto;
}


/*
 *	Body:
 */
body{
   background: var(--bg-color);
   width: 100%;
   height: 100%;
   overflow: hidden;
}



/* ========== * ========== * ========== * ==========
 * Util classes
 * ========== * ========== * ========== * ==========
 */
/**
 * Appbar
 */
.app-bar{
	position: relative;
	display: block;
	width: 100%;
	font-size: 1.2em;
	z-index: 8;
}
.app-bar > *{
	padding: 1.5em;
	vertical-align: middle;
}
.app-bar:nth-child(1n+2) > *{
	padding: 0 1.5em 1em 1.5em;
	font-size: 0.9em;
}
.app-bar.flex-horizontal-layout{
	align-items: center;
}
/**
 * FAB inside appbars
 */
.app-bar .fab{
	display: inline-block;

	min-height: 2.6em;
	min-width: 2.6em;
	max-height: 2.6em;
	max-width: 2.6em;

	padding: 0;
	margin: 0.5em;

	font-size: 1.2em;
	background: none !important;
	box-shadow: none;
}
.app-bar:not(.tinted) .fab, .app-bar:not(.tinted) > i.material-icons{
	color: var(--bg-color-contrast-icon) !important;
}
.app-bar .fab:not(.right){
	margin-right: 0.5em;
}
.app-bar .fab:not(.right) + span{
	padding-left: 0;
}
.app-bar.flex-horizontal-layout .fab{
	flex-grow: 0;
}
.app-bar.flex-horizontal-layout .fab.right{
	align-self: flex-end;
}
/**
 * Boundary FAB
 */
.app-bar > .fab.boundary{
	position: absolute;
	min-height: 2.1em;
	min-width: 2.1em;
	max-height: 2.1em;
	max-width: 2.1em;
	bottom: -1.5em;
	background-color: var(--accent-color-light) !important;
}
.app-bar > .fab.boundary.right{
	right: 0.5em;
}
/**
 * Appbar icon
 */
.app-bar > i.material-icons{
	font-size: 1.2em;
	flex-grow: 0;
	padding: 1em 0 1em 1em;
}



/**
 * Cards
 */
.card{
   background: var(--bg-color-lighter);
	border-radius: 2px;
	overflow: hidden;
}



/**
 * Boxes
 */
.box{
	position: relative;
   display: block;
	padding: 1em 1em;
   margin: 0.5em 1em;
}



/**
 * Lines and separators
 * The difference between a line and a separator is that a line doesn't have margins
 */
.vertical-separator, .horizontal-separator, .vertical-line, .horizontal-line{
	background: rgba(0, 0, 0, 0.1);
	flex-grow: 0;
	flex-shrink: 0;
}
.vertical-separator, .horizontal-separator{
	margin: 2em 0;
}
.vertical-separator, .vertical-line{
	display: inline-block;
	width: 1px;
	max-width: 1px;
	height: 100%;
}
.horizontal-separator, .horizontal-line{
	display: block;
	width: 100%;
	height: 1px;
	max-height: 1px;
}



/**
 * Navigation drawer
 */
.drawer{
	position: fixed;
	display: block;
	height: 100%;
	width: 0;
	background: #fff;
	margin-left: -100%;
	z-index: 12;
	transition: margin-left 0.2s ease;
}
.drawer.right-shifted{
	width: 24em;
	max-width: 100%;
	margin-left: 0;
	transition: margin-left 0.2s ease;
}
.drawer > *{
	display: block;
	width: 100%;

	text-align: left;
	transition: background-color 0.3s ease;
}
.drawer > button, .drawer > a{
	color: var(--bg-color-contrast-faded);
	font-size: 1.1em;
	padding: 1.2em;
}
.drawer > button:hover, .drawer > a:hover{
	background-color: rgba(0, 0, 0, 0.07);
}
.drawer > .selected::before{
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 5px;
	height: 100%;

	background: var(--primary-color);
}


/*
 *	Layout:
 */
.center{
	margin: 0 auto;
	text-align: center;
}

.horizontal-layout > *{
	position: relative;
	display: inline-block;
	height: 100%;
}
.vertical-layout > *{
	position: relative;
	display: block;
	width: 100%;
}

.flex-horizontal-layout{
	display: flex;
	flex-direction: row;
}
.flex-vertical-layout{
	display: flex;
	flex-direction: column;
}
.flex-horizontal-layout > *, .flex-vertical-layout > *{
	position: relative;
	flex-grow: 1;
	flex-shrink: 1;
}

.expanded{
	width: 100%;
	height: 100%;
}


.round{
	border-radius: 50%;
}
.round-thumbnail{
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
	background-color: #424242;

	border-radius: 50%;
}
.size-2{min-width: 2em; max-width: 2em; width: 2em; min-height: 2em; max-height: 2em; height: 2em;}
.size-3{min-width: 3em; max-width: 3em; width: 3em; min-height: 3em; max-height: 3em; height: 3em;}
.size-4{min-width: 4em; max-width: 4em; width: 4em; min-height: 4em; max-height: 4em; height: 4em;}
.size-6{min-width: 6em; max-width: 6em; width: 6em; min-height: 6em; max-height: 6em; height: 6em;}


.middle{
	vertical-align: middle;
}


/*
 *	Effects:
 */
.raised{
	box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
	transition-delay: 0.2s;
	transition: box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
div.raised, main.raised, nav.raised, section.raised{
	box-shadow: 0 3px 6px -3px rgba(0, 0, 0, 0.3);
}
header.raised{
	box-shadow: 0 3px 6px -3px rgba(0, 0, 0, 0.3);
}
.fab.boundary.raised{
	box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.3);
}
button.raised:active, a.raised:active, .dragging.raised {
	box-shadow: 0 6px 11px 0 rgba(0, 0, 0, 0.2);
	transition-delay: 0s;
}


.tinted{
	background: var(--primary-color);
	color: var(--primary-color-contrast);
}
.tinted *{
	color: var(--primary-color-contrast);
}



/**
 * FAB
 */
.fab-container{
	position: fixed;
	bottom: 2em;
	right: 2em;

	z-index: 6;
}
.fab{
	position: relative;

	min-width: auto;
	min-height: auto;
	height: auto;
	width: auto;

	padding: 0.8em;

	font-size: 1.6em;

	border-radius: 50%;
   background-color: var(--accent-color) !important;
   color: var(--accent-color-contrast) !important;
	transition: opacity, background, 0.3s ease;
}
.fab:active:not(.boundary){
   opacity: 0.7;
   transition: opacity 0.1s ease;
}

.fab-container > .fab{
	display: block;
	margin-top: 1em;
	font-size: 1.3em;
	padding: 0.6em;
}
.fab-container > .fab:last-child{
	font-size: 1.5em;
	padding: 0.8em;
}

.content-before-fab{
	padding-bottom: 6em;
}



/* ========== * ========== * ========== * ==========
 * Forms
 * ========== * ========== * ========== * ==========
 */
.form{
	width: 100%;
	overflow-y: auto;
}
/**
 * Form rows
 */
.form > .row{
	display: flex;
	align-items: baseline;
	justify-content: flex-start;

	max-width: 100%;
	padding: 2em;

	transition: background 0.2s ease;
}
.form > .row:hover{
	background: var(--bg-color-dark);
}
/**
 * Form row icon
 */
.form > .row > .material-icons{
	padding-right: 1.5em;
	color: var(--bg-color-contrast-icon);
}



/* ========== * ========== * ========== * ==========
 * Round image input
 * ========== * ========== * ========== * ==========
 */
.round-thumbnail-image-input{
   display: flex;
   overflow: hidden;
}
/**
 * Hidden file input
 */
.round-thumbnail-image-input > input[type="file"]{
	visibility: hidden;
   width: 0;
   height: 0;
}
/**
 * Icon
 */
.round-thumbnail-image-input > .material-icons{
	width: 100%;
	height: 100%;
   opacity: 0.3;
	font-size: 1.2em;
	border-radius: 50%;
	overflow: hidden;
   transition: opacity, font-size, 0.2s ease;
}
.round-thumbnail-image-input:hover > .material-icons{
   opacity: 0.9;
   font-size: 2em;
   cursor: pointer;
}



/* ========== * ========== * ========== * ==========
 * Labeled output
 * ========== * ========== * ========== * ==========
 */
.labeled-output{
	font-size: 1em;
	color: var(--bg-color-contrast);
}
.labeled-output::before{
	content: attr(data-label);
	position: absolute;
	top: -1.5em;
	left: 0;

	font-size: 0.8em;
	color: var(--bg-color-contrast-faded);
}



/* ========== * ========== * ========== * ==========
 * List default text
 * ========== * ========== * ========== * ==========
 */
li .primary{
	font-size: 1.1em;
	color: var(--bg-color-contrast);
}
li .secondary{
	font-size: 0.8em;
	color: var(--bg-color-contrast-faded);
}



/* ========== * ========== * ========== * ==========
 * Listing
 * ========== * ========== * ========== * ==========
 */
.grid {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
}
.list{
	/*padding: 1em 0;*/
}
.list > li, .grid > li{
	position: relative;
	display: block;
	opacity: 1;
   transition: opacity, background, 0.3s ease;
}
.list > li{
	padding: 1.2em 1em;
}
.grid > li{
	width: 15em;
	height: 15em;
	margin: 1em;
	padding: 0.5em;
}

.list > .card, .grid > .card{
	background: var(--bg-color-light);
}

.grid > li > .thumbnail{
	width: 100%;
	height: 100%;
}

.list > li:hover, .grid > li:hover{
	background: #fff;
	transition: background 0.2s ease;
}
.list > li:active, .grid > li:active{
	opacity: 0.7;
	transition: opacity 0.1s ease;
}
.list > .selected, .grid > .selected{
	background: rgba(0, 0, 0, 0.08);
}

.list > .overlay, .grid > .overlay{
	display: none;
	position: fixed;
	margin: 0;
	width: 100%;
	height: 100%;
	background: rgba(0, 0, 0, 0.5);
	z-index: 1;
}

.list-fab{
	padding-bottom: 6em;
}

.list-bottom-button{
	padding: 0.6em;
}



/* ========== * ========== * ========== * ==========
 * Flat buttons
 * ========== * ========== * ========== * ==========
 */
/**
 * Flat button
 */
.flat-button{
	position: relative;
	padding: 1em;
	color: var(--bg-color-contrast);
}
.flat-button:not(.material-icons){
	text-transform: uppercase;
}
.flat-button.highlighted{
	color: var(--accent-color);
   font-weight: bold;
}
.flat-button:disabled{
	color: var(--bg-color-contrast-faded);
	opacity: 0.5;
}



/* ========== * ========== * ========== * ==========
 * Dialogs
 * ========== * ========== * ========== * ==========
 */
/**
 * Dialog overlay container
 */
.dialogs{
	opacity: 0;
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	padding: 5vh 0;

	background: rgba(0, 0, 0, 0.6);
	z-index: 10;
}
/**
 * Dialog
 */
.dialog{
	opacity: 0;
	max-height: 100%;
	width: 50vw;
	margin: auto;
	height: auto;
	background: var(--bg-color);
	transform: translateY(5em);
}
@media handheld, (max-width: 25em), (max-height: 25em){
	.dialog{
		position: fixed;
		top: 0;
		left: 0;
		width: 100vw;
		height: 100vh;
		border-radius: 0;
	}
}
@media (orientation: landscape){
	.dialog{
		min-width: 20em;
	}
}
@media (orientation: portrait){
	.dialog{
		min-width: 90vw;
	}
}

/**
 *	Dialog buttons:
 */
.dialog > .flat-button-container{
	display: flex;
	flex-direction: row;
	justify-content: flex-end;

	position: relative;
	width: 100%;
	flex-shrink: 0;
}
.dialog > .flat-button-container > *{
	padding: 1em 2.5em;
	height: 100%;
	flex-grow: 0;
}
.dialog > .flat-button-container > .material-icons{
	font-size: 1.3em;
}

/**
 * Default dialogs' text:
 */
.default-dialog-text{
	padding: 0 1.8em 2em 1.8em;
	font-size: 1.1em;
	white-space: pre-wrap;
}

@media handheld, (max-width: 25em), (max-height: 25em){
	.dialog > .flat-button-container{
		margin-top: auto;
		bottom: 0;
	}
}

/**
 * Dialog animation:
 */
.dialog:not(.active){
	animation: dialogFadeOff;
	animation-timing-function: ease;
}
.dialog.active{
	animation: dialogFadeIn;
	animation-timing-function: ease;
	animation-fill-mode: forwards;
}

.dialogs:not(.active){
	animation: dialogContainerFadeOff;
	animation-timing-function: ease;
}
.dialogs.active{
	animation: dialogContainerFadeIn;
	animation-timing-function: ease;
	animation-fill-mode: forwards;
}

/**
 * Dialog keyframes:
 */
@keyframes dialogFadeIn{
	0% {
		opacity: 0;
		transform: translateY(5em);
	}
	100% {
		opacity: 1;
		transform: translateY(0);
	}
}
@keyframes dialogFadeOff{
	0% {
		opacity: 1;
		transform: translateY(0);
	}
	100% {
		opacity: 0;
		transform: translateY(5em);
	}
}

@keyframes dialogContainerFadeIn{
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}
@keyframes dialogContainerFadeOff{
	0% {
		opacity: 1;
	}
	100% {
		opacity: 0;
	}
}



/* ========== * ========== * ========== * ==========
 * Snack bar
 * ========== * ========== * ========== * ==========
 */
.snackbar{
	display: flex;
	position: fixed;
	flex-direction: row;
	align-items: center;
	bottom: 0;
	width: 100%;
	min-height: 4em;

	padding-left: 2em;

	font-size: 1em;
	background: #212121;
	z-index: 8;

	transform: translateY(5em);
}
/*
 *	Snackbar content:
 */
.snackbar > span{
	flex-grow: 1;
	padding: 0.5em 2em 0.5em 0;
	color: #FAFAFA;
}
.snackbar > button:nth-of-type(1){
	flex-grow: 0;
	flex-shrink: 0;
	padding: 1.6em 1em;
	text-transform: uppercase;
	color: var(--accent-color);
}
.snackbar > button:nth-of-type(2){
	flex-grow: 0;
	flex-shrink: 0;
	padding: 0.5em;
	margin: 0 0.6em;
	font-size: 1.2em;
	color: #FAFAFA;
}

/**
 * Snackbar media queries:
 */
@media (orientation: landscape){
	.snackbar{
		min-width: 50%;
		max-width: 70%;
		margin: 1em;
		border-radius: 3px;
	}
}

/**
 * Snackbar animation:
 */
.snackbar:not(.active){
	animation: snackbarFadeOff;
	animation-timing-function: ease;
}
.snackbar.active{
	animation: snackbarFadeIn;
	animation-timing-function: ease;
	animation-fill-mode: forwards;
}

/**
 * Snackbar keyframes:
 */
@keyframes snackbarFadeIn{
	0% {
		opacity: 0;
		transform: translateY(5em);
	}
	100% {
		opacity: 1;
		transform: translateY(0);
	}
}
@keyframes snackbarFadeOff{
	0% {
		opacity: 1;
		transform: translateY(0);
	}
	100% {
		opacity: 0;
		transform: translateY(5em);
	}
}
